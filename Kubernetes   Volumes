                  What is kubernetes volumes?
In Kubernetes, a Volume is used to store data that persists across container restarts within a pod. 
It allows containers in a pod to share data and store logs, configuration files, or any persistent data needed for applications.

                  Type of volumes in kuberntes .
1.emptyDir
 *.Temporary storage for a pod.
 *.Lives as long as the pod lives.
 *.Shared between containers in a pod.
eg:yaml
volumes:
  - name: cache-volume
    emptyDir: {}
2.hostPath
  *.Mounts a file or directory from the host nodeâ€™s filesystem into your pod.
eg:yaml
volumes:
  - name: host-volume
    hostPath:
      path: /data
      type: Directory
 3.persistentVolumeClaim (PVC)
    *.Used with Persistent Volumes (PVs) to provide long-term storage.
    *.Supports dynamic provisioning using storage classes.
eg:yaml
volumes:
  - name: storage
    persistentVolumeClaim:
      claimName: my-pvc
4.configMap / secret
   *.Mounts a configMap or secret as a file inside a pod.
eg:yaml
volumes:
  - name: config-vol
    configMap:
      name: my-config
5.nfs
  *.Mounts an NFS (Network File System) share.
eg:yaml
volumes:
  - name: nfs-volume
    nfs:
      server: 10.10.10.10
      path: "/exported/path"

Example:Using a volume in pod.
apiVersion: v1
kind: Pod
metadata:
  name: volume-demo
spec:
  containers:
  - name: app
    image: nginx
    volumeMounts:
    - name: my-volume
      mountPath: /usr/share/nginx/html
  volumes:
  - name: my-volume
    emptyDir: {}

Volumes commands :
kubectl get pv                # List all persistent volumes
kubectl get pvc               # List all persistent volume claims
kubectl describe pvc <name>   # Details of a PVC
kubectl get sc                # List available storage classes

          Persistent Volume (PV) vs Persistent Volume Claim (PVC)
| Concept          | Description                                      |
| ---------------- | ------------------------------------------------ |
| **PV**           | Admin-created piece of storage in the cluster    |
| **PVC**          | User request for storage; claims a PV            |
| **StorageClass** | Defines *how* storage is provisioned dynamically |



   
