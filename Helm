Helm is basically a package manager for Kubernetes, similar to how:

  *.apt works for Ubuntu/Debian
  *.yum/dnf works for CentOS/RedHat
  *.pip works for Python

Finding & Inspecting Charts
| Command                    | Purpose                                             |
| -------------------------- | --------------------------------------------------- |
| `helm search repo <name>`  | Search charts in your added repositories            |
| `helm search hub <name>`   | Search charts in the Helm Hub (global index)        |
| `helm show chart <chart>`  | Show chart metadata from `Chart.yaml`               |
| `helm show values <chart>` | Show default `values.yaml` (customizable settings)  |
| `helm show all <chart>`    | Show all chart info (metadata + values + templates) |



Setup & Info:
| Command                      | What It Does in Kubernetes                                                      |
| ---------------------------- | ------------------------------------------------------------------------------- |
| `helm version`               | Checks Helm client version and connection to Kubernetes API server              |
| `helm repo add <name> <url>` | Adds a Helm chart repository (like Bitnami) for installing apps into Kubernetes |
| `helm repo update`           | Refreshes chart listings so you get the latest versions                         |
| `helm search repo <keyword>` | Finds charts you can deploy in Kubernetes                                       |
| `helm search hub <keyword>`  | Searches the Helm Hub for charts                                                |

Deploying Applications:
| Command                               | Kubernetes Effect                                                                                 |
| ------------------------------------- | ------------------------------------------------------------------------------------------------- |
| `helm install <release-name> <chart>` | Deploys a chart’s resources (Deployments, Services, ConfigMaps, etc.) into the Kubernetes cluster |
| `helm list`                           | Shows all Helm releases currently running in Kubernetes                                           |
| `helm status <release-name>`          | Displays the Kubernetes resources and state for a specific release                                |

Managing Existing Apps:
| Command                                   | Kubernetes Effect                                                     |
| ----------------------------------------- | --------------------------------------------------------------------- |
| `helm upgrade <release-name> <chart>`     | Updates Kubernetes resources for that release (changing YAML configs) |
| `helm rollback <release-name> <revision>` | Reverts Kubernetes resources to an earlier version                    |
| `helm history <release-name>`             | Shows the revision history stored in Kubernetes for that release      |

 Removing Applications:
| Command                                        | Kubernetes Effect                                             |
| ---------------------------------------------- | ------------------------------------------------------------- |
| `helm uninstall <release-name>`                | Deletes all Kubernetes resources created by that Helm release |
| `helm uninstall <release-name> --keep-history` | Deletes resources but keeps the release history in Kubernetes |

Testing & Debugging:
| Command                                | Kubernetes Effect                                                 |
| -------------------------------------- | ----------------------------------------------------------------- |
| `helm template <release-name> <chart>` | Generates the Kubernetes YAML locally without applying it         |
| `helm get all <release-name>`          | Shows all Kubernetes manifests, hooks, and values for the release |
| `helm get manifest <release-name>`     | Displays only the Kubernetes manifests applied for that release   |

                    Helm chart folder structure 
Top level:
    Chart.yaml – Defines chart name, version, description, app version, and dependencies.
    values.yaml – Default values for the chart. You override these when installing (helm install -f custom-values.yaml).

charts/ :
    Empty in your case.
    This folder is for subcharts (dependencies) if your chart relies on other charts.

templates/ (this is where actual Kubernetes manifests are generated from) :
    deployment.yaml – Template for creating a Kubernetes Deployment (pods, replicas, containers, etc.).
    _helpers.tpl – Stores helper template functions/macros to avoid repeating code.
    hpa.yaml – Template for a Horizontal Pod Autoscaler (scales pods up/down).
    ingress.yaml – Template for an Ingress resource (routes external traffic to services).
    NOTES.txt – Message shown after installing/upgrading the chart (user instructions).
    serviceaccount.yaml – Template for creating a ServiceAccount.
    service.yaml – Template for Kubernetes Service (exposes your pods internally/externally).
    tests/test-connection.yaml – A test Pod definition to check if the app is reachable.

